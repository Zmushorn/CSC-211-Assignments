public class FibonacciAndBinaryConverter {
    public static void main(String[] args) {
        // Test fibonacci
        int n = 10;
        System.out.println("Fibonacci recursive: " + fibRecursive(n));
        System.out.println("Fibonacci iterative: " + fibIterative(n));
        
        // Test binary conversion
        int num = 42;
        System.out.println("Binary recursive: " + binRecursive(num));
        System.out.println("Binary iterative: " + binIterative(num));
    }
    
    // Recursive fibonacci
    public static int fibRecursive(int n) {
        if (n <= 0) return 0;
        if (n == 1) return 1;
        return fibRecursive(n - 1) + fibRecursive(n - 2);
    }
    
    // Iterative fibonacci
    public static int fibIterative(int n) {
        if (n <= 0) return 0;
        if (n == 1) return 1;
        
        int a = 0, b = 1, c;
        for (int i = 2; i <= n; i++) {
            c = a + b;
            a = b;
            b = c;
        }
        return b;
    }
    
    // Recursive binary conversion
    public static String binRecursive(int n) {
        if (n == 0) return "0";
        if (n == 1) return "1";
        return binRecursive(n / 2) + (n % 2);
    }
    
    // Iterative binary conversion
    public static String binIterative(int n) {
        if (n == 0) return "0";
        
        StringBuilder bin = new StringBuilder();
        while (n > 0) {
            bin.insert(0, n % 2);
            n /= 2;
        }
        return bin.toString();
    }
}
